"  AUTOGROUPS {{{

augroup configgroup
  autocmd!
  autocmd BufEnter Rakefile set filetype=ruby
  autocmd BufEnter Vagrantfile set filetype=ruby
  autocmd BufEnter Gemfile set filetype=ruby
augroup end

" }}}
" COLORS {{{

" Enable syntax highlighting
syntax enable

"Set colorscheme
set background=dark
colorscheme gruvbox

"}}}
" PLUGIN OPTIONS {{{

"vim-airline options
set laststatus=2
let g:airline_powerline_fonts = 1
" Show the list of buffers at the top
let g:airline#extensions#tabline#enabled = 1
" Show just the file name in the buffer tabs
let g:airline#extensions#tabline#fnamemod = ':t'
"let g:airline_theme='gruvbox'
let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline_section_z=''
let g:airline_skip_empty_sections = 1

" vim-markdown settings
let g:markdown_include_jekyll_support = 0

" allows cursor change in tmux mode
if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" Git Gutter
let g:gitgutter_sign_column_always = 1
hi GitGutterAdd ctermbg=235 ctermfg=4
hi GitGutterChange ctermbg=235 ctermfg=3
hi GitGutterDelete ctermbg=235 ctermfg=1
hi GitGutterChangeDelete ctermbg=235 ctermfg=5

" ALE Options
let g:ale_lint_on_text_changed = 0
let g:ale_lint_on_save = 1
let g:ale_sign_error = '✘'
let g:ale_sign_warning = '⚠'
highlight ALEErrorSign ctermbg=NONE ctermfg=red
highlight ALEWarningSign ctermbg=NONE ctermfg=yellow

" }}}
" {{{ SPACES & TABS

set tabstop=2
set expandtab
set shiftwidth=2
set softtabstop=2

" Auto indent
set autoindent
set smartindent

 " }}}
" UI CONFIG {{{

" Enable line numbers
set number

" Disable mouse
set mouse=

" Increase History
set history=100

" Give context to where the cursor is positioned in a file
set scrolloff=14

" Visual autocomplete for command menu
set wildmenu

" Redraw only when we ned to
set lazyredraw

" highlight matching brackets
set showmatch

" Hide buffers after they are abandoned
set hidden

" Highlight Trailing Whitespace
highlight ExtraWhitespace ctermbg=white guibg=white
match ExtraWhitespace /\s\+$/

" Auto Complete Menu
set completeopt=longest,menu

" paulrouget vim settings:
hi vertsplit ctermfg=238 ctermbg=235
hi LineNr ctermfg=237
hi StatusLine ctermfg=235 ctermbg=245
hi StatusLineNC ctermfg=235 ctermbg=237
hi Search ctermbg=58 ctermfg=15
hi Default ctermfg=1
hi clear SignColumn
hi SignColumn ctermbg=235
hi EndOfBuffer ctermfg=237 ctermbg=235

"set fillchars=vert:\ ,stl:\ ,stlnc:\

" }}}
" SEARCHING {{{

" Enable highlight search and highlight when searching
set hlsearch
set incsearch

" Ignore case when searching
set ignorecase
set smartcase

" Turn off search highlight with <leader><space>
nnoremap <leader><space> :nohlsearch<CR>

" }}}
" FOLDING {{{

" enable folding
set foldenable

" Open up to 10 folds by default
set foldlevelstart=10

" Max nested folds
set foldnestmax=10

" space opens/closes folds
nnoremap <space> za


"}}}
" MOVEMENT {{{

" Set to allow you to backspace while back past insert mode
set backspace=2

" move to beginning/end of line
nnoremap B ^
nnoremap E $

" highlight last inserted text
nnoremap gV `[v`]

" Open file and goto previous location
autocmd BufReadPost *  if line("'\"") > 1 && line("'\"") <= line("$")
    \|     exe "normal! g`\""
    \|  endif

" Disable arrows for movement, make them resize instead
"nmap <Left> :vertical resize -5<CR>
"nmap <Up> :resize -5<CR>
"nmap <Right> :vertical resize +5<CR>
"nmap <Down> :resize +5<CR>
"imap <Left> <Esc><Esc>a
"imap <Up> <Esc><Esc>a
"imap <Right> <Esc><Esc>a
"imap <Down> <Esc><Esc>a

" }}}
" SHORTCUTS {{{

" Clear whitespace at end of line with '_$'
nmap _$ :call Preserve("%s/\\s\\+$//e")<CR>

" Quote words and lines with \q', \q", \qd
:nnoremap <Leader>q" ciw""<Esc>P
:nnoremap <Leader>q' ciw''<Esc>P
:nnoremap <Leader>qd daW"=substitute(@@,"'\\\|\"","","g")<CR>P

" Wrap words in backticks with:  \q`
:nnoremap <Leader>q` ciw``<Esc>P

" ALE Shortcuts
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

" }}}
" BACKUPS & HISTORY {{{

" Disable files that don't need to be created
set noswapfile
set nobackup
set nowritebackup

" Persistent Undo
if v:version >= 703
    set undofile
    set undodir=~/.vim/tmp,~/.tmp,~/tmp,~/var/tmp,/tmp
endif

" }}}
" FUNCTIONS {{{

" toggle between number and relativenumber
function! ToggleNumber()
  if(&relativenumber == 1)
    set norelativenumber
    set number
  else
    set relativenumber
  endif
endfunc

function! Preserve(command)
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  execute a:command
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction

" }}}
" VARIOUS REMAPS {{{

" Spelling / Typos
:command! WQ wq
:command! Wq wq
:command! W w
:command! Q q

" Switch buffers with Tab & Shift-Tab
:nnoremap <Tab> :bnext<CR>
:nnoremap <S-Tab> :bprevious<CR>

" }}}

set modelines=1
" vim:foldmethod=marker:foldlevel=0
